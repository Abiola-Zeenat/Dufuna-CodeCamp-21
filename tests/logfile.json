{
  "stats": {
    "suites": 1,
    "tests": 18,
    "passes": 14,
    "pending": 0,
    "failures": 4,
    "start": "2022-09-15T23:14:36.094Z",
    "end": "2022-09-15T23:14:41.730Z",
    "duration": 5636,
    "testsRegistered": 18,
    "passPercent": 77.77777777777779,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "87c9748b-13ed-43b2-9308-55be7c6cf776",
      "title": "",
      "fullFile": "C:\\Users\\Samm\\Desktop\\dufuna-codecamp-21\\tests\\landing_page\\landing_page.js",
      "file": "\\landing_page.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7c463634-b5f1-49de-98f7-9894806beba4",
          "title": "Testing Scholars Project",
          "fullFile": "C:\\Users\\Samm\\Desktop\\dufuna-codecamp-21\\tests\\landing_page\\landing_page.js",
          "file": "\\landing_page.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"before all\" hook: setupWebdriver in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 4683,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {},
              "uuid": "33484ed6-9801-4b25-badd-866ad24cd770",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"after all\" hook in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "2955f77d-d82d-432f-8277-d5ddc8771ba5",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Food\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "3c9b0550-3012-4678-a065-4b185747c9f7",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Bag\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "8c7bf1d1-ce25-4efc-8bce-770353636f0b",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: FoodBag text is present on the page",
              "fullTitle": "Testing Scholars Project test case: FoodBag text is present on the page",
              "timedOut": false,
              "duration": 43,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"FoodBag\", `Ensure \"FoodBag\" text is present`);",
              "err": {},
              "uuid": "bf09f74b-df8f-4e44-8d3e-c8103c01bd7d",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Login",
              "fullTitle": "Testing Scholars Project test case: check Login",
              "timedOut": false,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Login\", \"Ensure the `Login` link is present on the header\");",
              "err": {},
              "uuid": "e9c5cba3-4408-4d51-93c4-9dac9aa408e9",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Cart",
              "fullTitle": "Testing Scholars Project test case: check Cart",
              "timedOut": false,
              "duration": 50,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Cart\", \"Ensure the `Cart` link is present on the header\");",
              "err": {},
              "uuid": "3fb050a9-fc78-42b1-a4c6-d48bee002233",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Sign up",
              "fullTitle": "Testing Scholars Project test case: check Sign up",
              "timedOut": false,
              "duration": 52,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Sign up\", \"Ensure the `Sign up` link is present on the header\");",
              "err": {
                "message": "AssertionError: Ensure the `Sign up` link is present on the header: expected 'FoodBag\\nCart Login Sign Up\\nFoodBag\\…' to include 'Sign up'",
                "estack": "AssertionError: Ensure the `Sign up` link is present on the header: expected 'FoodBag\\nCart Login Sign Up\\nFoodBag\\…' to include 'Sign up'\n    at Context.<anonymous> (landing_page.js:55:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "13c646e5-6952-4f6b-b458-efcd7eaa13ad",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-descrption1",
              "fullTitle": "Testing Scholars Project test case: check service-descrption1",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Pick an interest\", \"Ensure Quantity label is present\");",
              "err": {},
              "uuid": "fcace41b-e8f2-4795-9c35-a1001446cfaf",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-description2",
              "fullTitle": "Testing Scholars Project test case: check service-description2",
              "timedOut": false,
              "duration": 53,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"How we serve you\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "dbefe4db-eb1c-4782-916f-4b9d8b9ab21f",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service title-1",
              "fullTitle": "Testing Scholars Project test case: check service title-1",
              "timedOut": false,
              "duration": 50,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us where you are\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "d86595b5-5b14-47e0-a60b-5d37258d047d",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-title-2",
              "fullTitle": "Testing Scholars Project test case: check service-title-2",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us what you want\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "f25cb2e8-bf5d-4cc9-bb2a-c30412ec42a7",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-title-3",
              "fullTitle": "Testing Scholars Project test case: check service-title-3",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"We'll come running\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "ea0e8f9b-c43b-4ac1-be6c-319693de6a6a",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check footer",
              "fullTitle": "Testing Scholars Project test case: check footer",
              "timedOut": false,
              "duration": 40,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Contact us\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {
                "message": "AssertionError: Ensure you have the appropriate text as seen on the mock-up: expected 'Contact Us\\nTerms & Conditions. Priva…' to include 'Contact us'",
                "estack": "AssertionError: Ensure you have the appropriate text as seen on the mock-up: expected 'Contact Us\\nTerms & Conditions. Priva…' to include 'Contact us'\n    at Context.<anonymous> (landing_page.js:91:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "1af95d49-8e20-402a-b372-5dfc4b3d1d2c",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check terms & conditions on footer",
              "fullTitle": "Testing Scholars Project test case: check terms & conditions on footer",
              "timedOut": false,
              "duration": 25,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Terms & Conditions . Privacy Policy\", \"Ensure the texts on the footer is properly formated\");",
              "err": {
                "message": "AssertionError: Ensure the texts on the footer is properly formated: expected 'Contact Us\\nTerms & Conditions. Priva…' to include 'Terms & Conditions . Privacy Policy'",
                "estack": "AssertionError: Ensure the texts on the footer is properly formated: expected 'Contact Us\\nTerms & Conditions. Priva…' to include 'Terms & Conditions . Privacy Policy'\n    at Context.<anonymous> (landing_page.js:97:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "aac94a99-b904-418a-b8ad-cf7bd641ee87",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check copyright on footer",
              "fullTitle": "Testing Scholars Project test case: check copyright on footer",
              "timedOut": false,
              "duration": 21,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Copyright 2021 FoodBag is a registered trademark\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {
                "message": "AssertionError: Ensure you have the appropriate text as seen on the mock-up: expected 'Contact Us\\nTerms & Conditions. Priva…' to include 'Copyright 2021 FoodBag is a registere…'",
                "estack": "AssertionError: Ensure you have the appropriate text as seen on the mock-up: expected 'Contact Us\\nTerms & Conditions. Priva…' to include 'Copyright 2021 FoodBag is a registere…'\n    at Context.<anonymous> (landing_page.js:103:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "3a748fc5-75bd-410c-b630-7ab10bf61e75",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check input field",
              "fullTitle": "Testing Scholars Project test case: check input field",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const input = await driver.findElements(By.css('input'));\nconst size = input.length\nassert.equal(size, 1, `Ensure you have the input field as seen in the mock-up`);",
              "err": {},
              "uuid": "5a3c81eb-7d6c-40df-ab45-19ebb974dd21",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check placeholder",
              "fullTitle": "Testing Scholars Project test case: check placeholder",
              "timedOut": false,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('input')).getAttribute('placeholder');\nassert.equal(element, \"Enter your delivery address\", `Ensure you have the placeholder as seen in the mock-up`);",
              "err": {},
              "uuid": "a9680775-5419-469f-8d17-ed65c187548c",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check label of input-field",
              "fullTitle": "Testing Scholars Project test case: check label of input-field",
              "timedOut": false,
              "duration": 63,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('body')).getText();\nassert.include(element, \"Where are you?\", `Ensure you have the input field as the appropriate label as seen in the mock-up`);",
              "err": {},
              "uuid": "06f1c38a-5666-4ae4-a87f-be4edc48618d",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: assert image amount is 10",
              "fullTitle": "Testing Scholars Project test case: assert image amount is 10",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const images = await driver.findElements(By.css('img'));\nconst size = images.length\nassert.equal(size, 10, `Ensure all the images are present on the page`);",
              "err": {},
              "uuid": "d8ee745a-7861-4b5f-8649-706a76f74235",
              "parentUUID": "7c463634-b5f1-49de-98f7-9894806beba4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c9b0550-3012-4678-a065-4b185747c9f7",
            "8c7bf1d1-ce25-4efc-8bce-770353636f0b",
            "bf09f74b-df8f-4e44-8d3e-c8103c01bd7d",
            "e9c5cba3-4408-4d51-93c4-9dac9aa408e9",
            "3fb050a9-fc78-42b1-a4c6-d48bee002233",
            "fcace41b-e8f2-4795-9c35-a1001446cfaf",
            "dbefe4db-eb1c-4782-916f-4b9d8b9ab21f",
            "d86595b5-5b14-47e0-a60b-5d37258d047d",
            "f25cb2e8-bf5d-4cc9-bb2a-c30412ec42a7",
            "ea0e8f9b-c43b-4ac1-be6c-319693de6a6a",
            "5a3c81eb-7d6c-40df-ab45-19ebb974dd21",
            "a9680775-5419-469f-8d17-ed65c187548c",
            "06f1c38a-5666-4ae4-a87f-be4edc48618d",
            "d8ee745a-7861-4b5f-8649-706a76f74235"
          ],
          "failures": [
            "13c646e5-6952-4f6b-b458-efcd7eaa13ad",
            "1af95d49-8e20-402a-b372-5dfc4b3d1d2c",
            "aac94a99-b904-418a-b8ad-cf7bd641ee87",
            "3a748fc5-75bd-410c-b630-7ab10bf61e75"
          ],
          "pending": [],
          "skipped": [],
          "duration": 923,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/Samm/Desktop/dufuna-codecamp-21/tests/landing_page/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "6.2.0"
    }
  }
}