{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-15T11:08:58.529Z",
    "end": "2022-03-15T11:11:58.543Z",
    "duration": 180014,
    "testsRegistered": 8,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 8,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "ba72de23-7799-4f09-ac6b-5243d0d489af",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4e9ea1d7-4398-45df-8a7d-bddc16badc30",
          "title": "Testing Scholars Project",
          "fullFile": "/Users/oluwatimileyinakinpelu/documents/Dufuna-CodeCamp-21/tests/vendors_page/vendors.js",
          "file": "/Users/oluwatimileyinakinpelu/documents/Dufuna-CodeCamp-21/tests/vendors_page/vendors.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver for \"test case: FoodBag Logo is present\"",
              "fullTitle": "Testing Scholars Project \"before all\" hook: setupWebdriver for \"test case: FoodBag Logo is present\"",
              "timedOut": true,
              "duration": 180005,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {
                "message": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/oluwatimileyinakinpelu/documents/Dufuna-CodeCamp-21/tests/vendors_page/vendors.js)",
                "estack": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/oluwatimileyinakinpelu/documents/Dufuna-CodeCamp-21/tests/vendors_page/vendors.js)\n    at listOnTimeout (internal/timers.js:557:17)\n    at processTimers (internal/timers.js:500:7)",
                "diff": null
              },
              "uuid": "296fb9ba-af21-4294-85af-8dcaa076c66a",
              "parentUUID": "4e9ea1d7-4398-45df-8a7d-bddc16badc30",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"after all\" hook in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "22a86636-6c61-4a13-81a5-c26b2031fb71",
              "parentUUID": "4e9ea1d7-4398-45df-8a7d-bddc16badc30",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Food\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "ad513780-5ddf-4c4d-b7e4-b9bc821aca2a",
              "parentUUID": "4e9ea1d7-4398-45df-8a7d-bddc16badc30",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Bag\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "7f64f994-2699-4a52-9623-983f5af6049c",
              "parentUUID": "4e9ea1d7-4398-45df-8a7d-bddc16badc30",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: FoodBag text is present on the page",
              "fullTitle": "Testing Scholars Project test case: FoodBag text is present on the page",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"FoodBag\", `Ensure \"FoodBag\" text is present`);",
              "err": {},
              "uuid": "9dee3e2a-2366-4746-a1ed-e4257d3d721b",
              "parentUUID": "4e9ea1d7-4398-45df-8a7d-bddc16badc30",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check Login",
              "fullTitle": "Testing Scholars Project test case: check Login",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Login\", \"Ensure the `Login` link is present on the header\");",
              "err": {},
              "uuid": "64ff00b7-0591-4d8e-99fb-9b16b4ec6403",
              "parentUUID": "4e9ea1d7-4398-45df-8a7d-bddc16badc30",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check Cart",
              "fullTitle": "Testing Scholars Project test case: check Cart",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Cart\", \"Ensure the `Cart` link is present on the header\");",
              "err": {},
              "uuid": "d39d28fe-c8aa-4afc-99ee-17c29e805504",
              "parentUUID": "4e9ea1d7-4398-45df-8a7d-bddc16badc30",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check page text",
              "fullTitle": "Testing Scholars Project test case: check page text",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"All Vendors\", \"Ensure the `Cart` link is present on the header\");",
              "err": {},
              "uuid": "0c203958-c26c-4a3d-a6e8-a5de2f3ff9c3",
              "parentUUID": "4e9ea1d7-4398-45df-8a7d-bddc16badc30",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check page text",
              "fullTitle": "Testing Scholars Project test case: check page text",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElements(By.css(\"hr\"))\nconst length = await element.length\nassert.equal(length, 1,  \"Ensure the horizantal rule is present beneath the first list of images as seen in the mock-up\");",
              "err": {},
              "uuid": "67f1db76-039c-43ec-ac91-e979beeea629",
              "parentUUID": "4e9ea1d7-4398-45df-8a7d-bddc16badc30",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: assert image amount is 9",
              "fullTitle": "Testing Scholars Project test case: assert image amount is 9",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const images = await driver.findElements(By.css('img'));\nconst size = images.length\nassert.equal(size, 10, `Ensure all the images are present on the page`);",
              "err": {},
              "uuid": "9974f022-6af3-441a-a9d7-30fd5e791596",
              "parentUUID": "4e9ea1d7-4398-45df-8a7d-bddc16badc30",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "ad513780-5ddf-4c4d-b7e4-b9bc821aca2a",
            "7f64f994-2699-4a52-9623-983f5af6049c",
            "9dee3e2a-2366-4746-a1ed-e4257d3d721b",
            "64ff00b7-0591-4d8e-99fb-9b16b4ec6403",
            "d39d28fe-c8aa-4afc-99ee-17c29e805504",
            "0c203958-c26c-4a3d-a6e8-a5de2f3ff9c3",
            "67f1db76-039c-43ec-ac91-e979beeea629",
            "9974f022-6af3-441a-a9d7-30fd5e791596"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.4"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/oluwatimileyinakinpelu/documents/Dufuna-CodeCamp-21/tests/vendors_page/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "6.0.1"
    }
  }
}