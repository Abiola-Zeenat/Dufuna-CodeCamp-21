{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-27T17:04:36.848Z",
    "end": "2022-10-27T17:07:37.015Z",
    "duration": 180167,
    "testsRegistered": 8,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 8,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "6e43d9e8-597d-411c-82cf-c3c8c6ab61a4",
      "title": "",
      "fullFile": "C:\\Users\\User\\Desktop\\Dufuna-CodeCamp-21\\tests\\vendors_page\\vendors.js",
      "file": "\\vendors.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bfc2c82f-0b75-4c78-911e-2a825ae42379",
          "title": "Testing Scholars Project",
          "fullFile": "C:\\Users\\User\\Desktop\\Dufuna-CodeCamp-21\\tests\\vendors_page\\vendors.js",
          "file": "\\vendors.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver for \"test case: FoodBag Logo is present\"",
              "fullTitle": "Testing Scholars Project \"before all\" hook: setupWebdriver for \"test case: FoodBag Logo is present\"",
              "timedOut": true,
              "duration": 180033,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {
                "message": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\User\\Desktop\\Dufuna-CodeCamp-21\\tests\\vendors_page\\vendors.js)",
                "estack": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\User\\Desktop\\Dufuna-CodeCamp-21\\tests\\vendors_page\\vendors.js)\n    at listOnTimeout (internal/timers.js:554:17)\n    at processTimers (internal/timers.js:497:7)",
                "diff": null
              },
              "uuid": "78a2a6f5-1237-45c2-8741-0743ac75418e",
              "parentUUID": "bfc2c82f-0b75-4c78-911e-2a825ae42379",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"after all\" hook in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "2db860de-a5d2-43ae-8a55-533ef856eb61",
              "parentUUID": "bfc2c82f-0b75-4c78-911e-2a825ae42379",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Food\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "56209ee5-00fe-472e-9e64-0552a2245dea",
              "parentUUID": "bfc2c82f-0b75-4c78-911e-2a825ae42379",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Bag\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "98f35e1a-0701-4067-9ea9-bdbbc5fd6b16",
              "parentUUID": "bfc2c82f-0b75-4c78-911e-2a825ae42379",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: FoodBag text is present on the page",
              "fullTitle": "Testing Scholars Project test case: FoodBag text is present on the page",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"FoodBag\", `Ensure \"FoodBag\" text is present`);",
              "err": {},
              "uuid": "72288a55-5fd0-4297-b7e4-5088479589b6",
              "parentUUID": "bfc2c82f-0b75-4c78-911e-2a825ae42379",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check Login",
              "fullTitle": "Testing Scholars Project test case: check Login",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Login\", \"Ensure the `Login` link is present on the header\");",
              "err": {},
              "uuid": "6b4269a3-1133-49b6-b370-41d69c60e40d",
              "parentUUID": "bfc2c82f-0b75-4c78-911e-2a825ae42379",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check Cart",
              "fullTitle": "Testing Scholars Project test case: check Cart",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Cart\", \"Ensure the `Cart` link is present on the header\");",
              "err": {},
              "uuid": "5e9f8ab5-bbaa-4a94-86aa-ed10c3bd58bd",
              "parentUUID": "bfc2c82f-0b75-4c78-911e-2a825ae42379",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check page text",
              "fullTitle": "Testing Scholars Project test case: check page text",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"All Vendors\", \"Ensure the `Cart` link is present on the header\");",
              "err": {},
              "uuid": "82cbeadf-ab8a-4485-8ebe-be5bdaa3269d",
              "parentUUID": "bfc2c82f-0b75-4c78-911e-2a825ae42379",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check page text",
              "fullTitle": "Testing Scholars Project test case: check page text",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElements(By.css(\"hr\"))\nconst length = await element.length\nassert.equal(length, 1,  \"Ensure the horizantal rule is present beneath the first list of images as seen in the mock-up\");",
              "err": {},
              "uuid": "be593144-26a1-4c15-8f89-1f76a75191a8",
              "parentUUID": "bfc2c82f-0b75-4c78-911e-2a825ae42379",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: assert image amount is 9",
              "fullTitle": "Testing Scholars Project test case: assert image amount is 9",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const images = await driver.findElements(By.css('img'));\nconst size = images.length\nassert.equal(size, 10, `Ensure all the images are present on the page`);",
              "err": {},
              "uuid": "bfe5e1fa-0308-4c7a-849e-7ce7660836bb",
              "parentUUID": "bfc2c82f-0b75-4c78-911e-2a825ae42379",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "56209ee5-00fe-472e-9e64-0552a2245dea",
            "98f35e1a-0701-4067-9ea9-bdbbc5fd6b16",
            "72288a55-5fd0-4297-b7e4-5088479589b6",
            "6b4269a3-1133-49b6-b370-41d69c60e40d",
            "5e9f8ab5-bbaa-4a94-86aa-ed10c3bd58bd",
            "82cbeadf-ab8a-4485-8ebe-be5bdaa3269d",
            "be593144-26a1-4c15-8f89-1f76a75191a8",
            "bfe5e1fa-0308-4c7a-849e-7ce7660836bb"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/User/Desktop/Dufuna-CodeCamp-21/tests/vendors_page/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "6.2.0"
    }
  }
}