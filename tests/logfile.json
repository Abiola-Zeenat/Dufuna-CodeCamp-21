{
  "stats": {
    "suites": 1,
    "tests": 18,
    "passes": 14,
    "pending": 0,
    "failures": 4,
    "start": "2022-07-27T15:32:30.453Z",
    "end": "2022-07-27T15:32:34.789Z",
    "duration": 4336,
    "testsRegistered": 18,
    "passPercent": 77.77777777777779,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5d3d0b07-51c0-4322-8b85-b1e66490f68a",
      "title": "",
      "fullFile": "C:\\Users\\Tomiwa\\desktop\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js",
      "file": "\\landing_page.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
          "title": "Testing Scholars Project",
          "fullFile": "C:\\Users\\Tomiwa\\desktop\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js",
          "file": "\\landing_page.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"before all\" hook: setupWebdriver in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 3433,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {},
              "uuid": "07752b05-f584-4d50-8bd2-6477b280adb6",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"after all\" hook in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "8224797d-e6fa-4344-8a9d-cc2454916bbe",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Food\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "16176428-b89a-48dd-bcd0-ce9fdfaa351a",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Bag\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "f7659136-b6cb-42cd-b367-6a1657695331",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: FoodBag text is present on the page",
              "fullTitle": "Testing Scholars Project test case: FoodBag text is present on the page",
              "timedOut": false,
              "duration": 55,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"FoodBag\", `Ensure \"FoodBag\" text is present`);",
              "err": {},
              "uuid": "b65e02fa-6e4f-493d-a71b-68ad1d737b69",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Login",
              "fullTitle": "Testing Scholars Project test case: check Login",
              "timedOut": false,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Login\", \"Ensure the `Login` link is present on the header\");",
              "err": {},
              "uuid": "81ee2176-e800-4dd8-859f-89b6060518cb",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Cart",
              "fullTitle": "Testing Scholars Project test case: check Cart",
              "timedOut": false,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Cart\", \"Ensure the `Cart` link is present on the header\");",
              "err": {},
              "uuid": "c44cf2ad-5af8-42b6-b4ae-6640a1af8f8e",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Sign up",
              "fullTitle": "Testing Scholars Project test case: check Sign up",
              "timedOut": false,
              "duration": 54,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Sign up\", \"Ensure the `Sign up` link is present on the header\");",
              "err": {},
              "uuid": "d13cb87d-aa1e-4e9f-9cfd-9f8e66e85072",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-descrption1",
              "fullTitle": "Testing Scholars Project test case: check service-descrption1",
              "timedOut": false,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Pick an interest\", \"Ensure Quantity label is present\");",
              "err": {},
              "uuid": "2f8919b1-3b44-4fb8-812f-1bcf348fb46c",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-description2",
              "fullTitle": "Testing Scholars Project test case: check service-description2",
              "timedOut": false,
              "duration": 52,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"How we serve you\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "602b39d2-3b2b-4d0a-bedf-91eb124b1ccc",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service title-1",
              "fullTitle": "Testing Scholars Project test case: check service title-1",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us where you are\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "338ff340-15b8-4184-aa51-75dc28eab547",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-title-2",
              "fullTitle": "Testing Scholars Project test case: check service-title-2",
              "timedOut": false,
              "duration": 54,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us what you want\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "d5edd08c-9e6b-4be5-a121-dc9e4ef58d16",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-title-3",
              "fullTitle": "Testing Scholars Project test case: check service-title-3",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"We'll come running\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "6a70d8dc-ad1c-4aea-951d-a2807e69a3b3",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check footer",
              "fullTitle": "Testing Scholars Project test case: check footer",
              "timedOut": false,
              "duration": 60,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Contact us\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {},
              "uuid": "62f9f64c-8f82-41e6-bba9-1bc5d069febd",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check terms & conditions on footer",
              "fullTitle": "Testing Scholars Project test case: check terms & conditions on footer",
              "timedOut": false,
              "duration": 38,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Terms & Conditions . Privacy Policy\", \"Ensure the texts on the footer is properly formated\");",
              "err": {
                "message": "AssertionError: Ensure the texts on the footer is properly formated: expected 'Contact us\\nTerms & Condition. Privac…' to include 'Terms & Conditions . Privacy Policy'",
                "estack": "AssertionError: Ensure the texts on the footer is properly formated: expected 'Contact us\\nTerms & Condition. Privac…' to include 'Terms & Conditions . Privacy Policy'\n    at Context.<anonymous> (landing_page.js:97:20)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)",
                "diff": null
              },
              "uuid": "eb249a80-d4de-4c99-aa2a-a078e6de6b77",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check copyright on footer",
              "fullTitle": "Testing Scholars Project test case: check copyright on footer",
              "timedOut": false,
              "duration": 40,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Copyright 2021 FoodBag is a registered trademark\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {
                "message": "AssertionError: Ensure you have the appropriate text as seen on the mock-up: expected 'Contact us\\nTerms & Condition. Privac…' to include 'Copyright 2021 FoodBag is a registere…'",
                "estack": "AssertionError: Ensure you have the appropriate text as seen on the mock-up: expected 'Contact us\\nTerms & Condition. Privac…' to include 'Copyright 2021 FoodBag is a registere…'\n    at Context.<anonymous> (landing_page.js:103:20)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)",
                "diff": null
              },
              "uuid": "4756f999-9ec9-4d93-812f-93b0ee0e88b3",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check input field",
              "fullTitle": "Testing Scholars Project test case: check input field",
              "timedOut": false,
              "duration": 23,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const input = await driver.findElements(By.css('input'));\nconst size = input.length\nassert.equal(size, 1, `Ensure you have the input field as seen in the mock-up`);",
              "err": {
                "message": "AssertionError: Ensure you have the input field as seen in the mock-up: expected +0 to equal 1",
                "estack": "AssertionError: Ensure you have the input field as seen in the mock-up: expected +0 to equal 1\n    at Context.<anonymous> (landing_page.js:109:20)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)",
                "diff": "- 0\n+ 1\n"
              },
              "uuid": "d06e9f09-e497-4112-896d-d13140fed356",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check placeholder",
              "fullTitle": "Testing Scholars Project test case: check placeholder",
              "timedOut": false,
              "duration": 28,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('input')).getAttribute('placeholder');\nassert.equal(element, \"Enter your delivery address\", `Ensure you have the placeholder as seen in the mock-up`);",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"input\"}\n  (Session info: chrome=103.0.5060.134)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"input\"}\n  (Session info: chrome=103.0.5060.134)\n    at Object.throwDecodedError (C:\\Users\\Tomiwa\\desktop\\Dufuna-CodeCamp-21\\node_modules\\selenium-webdriver\\lib\\error.js:522:15)\n    at parseHttpResponse (C:\\Users\\Tomiwa\\desktop\\Dufuna-CodeCamp-21\\node_modules\\selenium-webdriver\\lib\\http.js:589:13)\n    at Executor.execute (C:\\Users\\Tomiwa\\desktop\\Dufuna-CodeCamp-21\\node_modules\\selenium-webdriver\\lib\\http.js:514:28)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)\n    at async thenableWebDriverProxy.execute (C:\\Users\\Tomiwa\\desktop\\Dufuna-CodeCamp-21\\node_modules\\selenium-webdriver\\lib\\webdriver.js:740:17)\n    at async toWireValue (C:\\Users\\Tomiwa\\desktop\\Dufuna-CodeCamp-21\\node_modules\\selenium-webdriver\\lib\\webdriver.js:141:15)\n    at async C:\\Users\\Tomiwa\\desktop\\Dufuna-CodeCamp-21\\node_modules\\selenium-webdriver\\lib\\webdriver.js:191:16\n    at async forEachKey (C:\\Users\\Tomiwa\\desktop\\Dufuna-CodeCamp-21\\node_modules\\selenium-webdriver\\lib\\webdriver.js:185:9)\n    at async convertKeys (C:\\Users\\Tomiwa\\desktop\\Dufuna-CodeCamp-21\\node_modules\\selenium-webdriver\\lib\\webdriver.js:190:3)\n    at async thenableWebDriverProxy.execute (C:\\Users\\Tomiwa\\desktop\\Dufuna-CodeCamp-21\\node_modules\\selenium-webdriver\\lib\\webdriver.js:738:22)\n    at async Context.<anonymous> (landing_page.js:113:29)",
                "diff": null
              },
              "uuid": "d86b3c43-db91-4d00-b941-fbaba58b2168",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check label of input-field",
              "fullTitle": "Testing Scholars Project test case: check label of input-field",
              "timedOut": false,
              "duration": 55,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('body')).getText();\nassert.include(element, \"Where are you?\", `Ensure you have the input field as the appropriate label as seen in the mock-up`);",
              "err": {},
              "uuid": "a99deb07-6ca6-4643-a13c-38c93e14a535",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: assert image amount is 10",
              "fullTitle": "Testing Scholars Project test case: assert image amount is 10",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const images = await driver.findElements(By.css('img'));\nconst size = images.length\nassert.equal(size, 10, `Ensure all the images are present on the page`);",
              "err": {},
              "uuid": "99f7907c-8dbe-42d4-9f0c-5dc88b402937",
              "parentUUID": "fca9bae7-3715-40dc-87ad-8c5db6f74a86",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16176428-b89a-48dd-bcd0-ce9fdfaa351a",
            "f7659136-b6cb-42cd-b367-6a1657695331",
            "b65e02fa-6e4f-493d-a71b-68ad1d737b69",
            "81ee2176-e800-4dd8-859f-89b6060518cb",
            "c44cf2ad-5af8-42b6-b4ae-6640a1af8f8e",
            "d13cb87d-aa1e-4e9f-9cfd-9f8e66e85072",
            "2f8919b1-3b44-4fb8-812f-1bcf348fb46c",
            "602b39d2-3b2b-4d0a-bedf-91eb124b1ccc",
            "338ff340-15b8-4184-aa51-75dc28eab547",
            "d5edd08c-9e6b-4be5-a121-dc9e4ef58d16",
            "6a70d8dc-ad1c-4aea-951d-a2807e69a3b3",
            "62f9f64c-8f82-41e6-bba9-1bc5d069febd",
            "a99deb07-6ca6-4643-a13c-38c93e14a535",
            "99f7907c-8dbe-42d4-9f0c-5dc88b402937"
          ],
          "failures": [
            "eb249a80-d4de-4c99-aa2a-a078e6de6b77",
            "4756f999-9ec9-4d93-812f-93b0ee0e88b3",
            "d06e9f09-e497-4112-896d-d13140fed356",
            "d86b3c43-db91-4d00-b941-fbaba58b2168"
          ],
          "pending": [],
          "skipped": [],
          "duration": 873,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/Tomiwa/desktop/Dufuna-CodeCamp-21/tests/landing_page/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "6.2.0"
    }
  }
}