{
  "stats": {
    "suites": 1,
    "tests": 18,
    "passes": 16,
    "pending": 0,
    "failures": 2,
    "start": "2022-06-29T23:17:49.560Z",
    "end": "2022-06-29T23:17:52.233Z",
    "duration": 2673,
    "testsRegistered": 18,
    "passPercent": 88.88888888888889,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5ec01ddf-e065-4691-aef9-72a86aa08253",
      "title": "",
      "fullFile": "C:\\Users\\PC\\desktop\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js",
      "file": "\\landing_page.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ad611189-f098-4fe9-af6c-3d39714d923c",
          "title": "Testing Scholars Project",
          "fullFile": "C:\\Users\\PC\\desktop\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js",
          "file": "\\landing_page.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"before all\" hook: setupWebdriver in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 1563,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {},
              "uuid": "a18ed32e-82f7-4b48-bea6-f0b5f7640eac",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"after all\" hook in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "3288cc29-6947-42ec-bfd8-5bfd7313f512",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Food\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "2e8de4bf-41bb-46c6-aba6-8c9eeeef6725",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Bag\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "b3ea8b54-0d06-45f3-9944-0c4d329fb1c3",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: FoodBag text is present on the page",
              "fullTitle": "Testing Scholars Project test case: FoodBag text is present on the page",
              "timedOut": false,
              "duration": 46,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"FoodBag\", `Ensure \"FoodBag\" text is present`);",
              "err": {},
              "uuid": "82f19692-c342-452a-a58d-fbfa6c417ebd",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Login",
              "fullTitle": "Testing Scholars Project test case: check Login",
              "timedOut": false,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Login\", \"Ensure the `Login` link is present on the header\");",
              "err": {},
              "uuid": "7bac3112-f518-43ae-a0c8-b88479bc6c78",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Cart",
              "fullTitle": "Testing Scholars Project test case: check Cart",
              "timedOut": false,
              "duration": 60,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Cart\", \"Ensure the `Cart` link is present on the header\");",
              "err": {},
              "uuid": "571f2967-669b-4fc8-afe9-77c7b928355d",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Sign up",
              "fullTitle": "Testing Scholars Project test case: check Sign up",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Sign up\", \"Ensure the `Sign up` link is present on the header\");",
              "err": {},
              "uuid": "447811ac-1035-455d-97dc-fa1653e553d9",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-descrption1",
              "fullTitle": "Testing Scholars Project test case: check service-descrption1",
              "timedOut": false,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Pick an interest\", \"Ensure Quantity label is present\");",
              "err": {},
              "uuid": "c20bdb91-3296-48f8-ad2e-717da990381b",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-description2",
              "fullTitle": "Testing Scholars Project test case: check service-description2",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"How we serve you\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "06141349-c3b5-407a-abc8-39c86a57e4e3",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service title-1",
              "fullTitle": "Testing Scholars Project test case: check service title-1",
              "timedOut": false,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us where you are\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "0014919a-c1c8-4be1-88bf-ec947e6f5106",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-title-2",
              "fullTitle": "Testing Scholars Project test case: check service-title-2",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us what you want\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "ceaf6231-611e-40d7-97f3-3cb052fb58d8",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-title-3",
              "fullTitle": "Testing Scholars Project test case: check service-title-3",
              "timedOut": false,
              "duration": 56,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"We'll come running\", \"Ensure you have the appropriate text for the service\");",
              "err": {
                "message": "AssertionError: Ensure you have the appropriate text for the service: expected 'FoodBag\\nCart Login Sign up\\nFoodBag\\…' to include 'We\\'ll come running'",
                "estack": "AssertionError: Ensure you have the appropriate text for the service: expected 'FoodBag\\nCart Login Sign up\\nFoodBag\\…' to include 'We\\'ll come running'\n    at Context.<anonymous> (landing_page.js:85:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "b4b91e84-d380-4f5e-8371-ab7d9bdaccf4",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check footer",
              "fullTitle": "Testing Scholars Project test case: check footer",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Contact us\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {},
              "uuid": "71c0d52f-e725-4c39-bd24-d07aad7f0ba0",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check terms & conditions on footer",
              "fullTitle": "Testing Scholars Project test case: check terms & conditions on footer",
              "timedOut": false,
              "duration": 25,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Terms & Conditions . Privacy Policy\", \"Ensure the texts on the footer is properly formated\");",
              "err": {
                "message": "AssertionError: Ensure the texts on the footer is properly formated: expected 'Contact us\\nTerms & Condition. Privac…' to include 'Terms & Conditions . Privacy Policy'",
                "estack": "AssertionError: Ensure the texts on the footer is properly formated: expected 'Contact us\\nTerms & Condition. Privac…' to include 'Terms & Conditions . Privacy Policy'\n    at Context.<anonymous> (landing_page.js:97:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "70d2d3e9-9e7a-4ae7-8251-02036421c416",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check copyright on footer",
              "fullTitle": "Testing Scholars Project test case: check copyright on footer",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Copyright 2021 FoodBag is a registered trademark\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {},
              "uuid": "bb8bea11-65ff-4509-b668-dd69df86ec0c",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check input field",
              "fullTitle": "Testing Scholars Project test case: check input field",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const input = await driver.findElements(By.css('input'));\nconst size = input.length\nassert.equal(size, 1, `Ensure you have the input field as seen in the mock-up`);",
              "err": {},
              "uuid": "b4d6b53f-cd62-49c1-88f5-49e0feb14f88",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check placeholder",
              "fullTitle": "Testing Scholars Project test case: check placeholder",
              "timedOut": false,
              "duration": 43,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('input')).getAttribute('placeholder');\nassert.equal(element, \"Enter your delivery address\", `Ensure you have the placeholder as seen in the mock-up`);",
              "err": {},
              "uuid": "3f15a0d8-fa2a-4fd0-aea3-b054e4dd1d94",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check label of input-field",
              "fullTitle": "Testing Scholars Project test case: check label of input-field",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('body')).getText();\nassert.include(element, \"Where are you?\", `Ensure you have the input field as the appropriate label as seen in the mock-up`);",
              "err": {},
              "uuid": "8d16a1a2-4893-46d7-928e-e10ff081a581",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: assert image amount is 10",
              "fullTitle": "Testing Scholars Project test case: assert image amount is 10",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const images = await driver.findElements(By.css('img'));\nconst size = images.length\nassert.equal(size, 10, `Ensure all the images are present on the page`);",
              "err": {},
              "uuid": "588eb751-6721-4772-a9c5-7bbdb789e7fa",
              "parentUUID": "ad611189-f098-4fe9-af6c-3d39714d923c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2e8de4bf-41bb-46c6-aba6-8c9eeeef6725",
            "b3ea8b54-0d06-45f3-9944-0c4d329fb1c3",
            "82f19692-c342-452a-a58d-fbfa6c417ebd",
            "7bac3112-f518-43ae-a0c8-b88479bc6c78",
            "571f2967-669b-4fc8-afe9-77c7b928355d",
            "447811ac-1035-455d-97dc-fa1653e553d9",
            "c20bdb91-3296-48f8-ad2e-717da990381b",
            "06141349-c3b5-407a-abc8-39c86a57e4e3",
            "0014919a-c1c8-4be1-88bf-ec947e6f5106",
            "ceaf6231-611e-40d7-97f3-3cb052fb58d8",
            "71c0d52f-e725-4c39-bd24-d07aad7f0ba0",
            "bb8bea11-65ff-4509-b668-dd69df86ec0c",
            "b4d6b53f-cd62-49c1-88f5-49e0feb14f88",
            "3f15a0d8-fa2a-4fd0-aea3-b054e4dd1d94",
            "8d16a1a2-4893-46d7-928e-e10ff081a581",
            "588eb751-6721-4772-a9c5-7bbdb789e7fa"
          ],
          "failures": [
            "b4b91e84-d380-4f5e-8371-ab7d9bdaccf4",
            "70d2d3e9-9e7a-4ae7-8251-02036421c416"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1022,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/PC/desktop/Dufuna-CodeCamp-21/tests/landing_page/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "6.2.0"
    }
  }
}